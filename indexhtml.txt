<!DOCTYPE html>
<html lang="es">
<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>EntraEnPauta App</title>
   <script src="https://cdn.tailwindcss.com"></script>
   <style>
       body {
           font-family: 'Inter', sans-serif;
       }
       .pauta-bar-segment {
           transition: width 0.3s ease-in-out;
       }
       textarea {
           resize: vertical;
           min-height: 80px;
       }
       .textarea-error {
           color: #dc2626; /* red-600 */
           border-color: #ef4444; /* red-500 */
       }
       .textarea-error::placeholder {
           color: #f87171; /* red-400 */
       }
       .counter-error {
           color: #dc2626; /* red-600 */
       }
       /* Custom scrollbar */
       ::-webkit-scrollbar {
           width: 8px;
       }
       ::-webkit-scrollbar-track {
           background: #f1f1f1;
           border-radius: 10px;
       }
       ::-webkit-scrollbar-thumb {
           background: #888;
           border-radius: 10px;
       }
       ::-webkit-scrollbar-thumb:hover {
           background: #555;
       }
       /* Hide number input spinners */
       input[type="number"]::-webkit-inner-spin-button,
       input[type="number"]::-webkit-outer-spin-button {
           -webkit-appearance: none;
           margin: 0;
       }
       input[type="number"] {
           -moz-appearance: textfield;
       }
       .audiologo-pos-btn {
           border-color: #cbd5e1; /* slate-300 */
           background-color: white;
       }
       .audiologo-pos-btn:hover {
           border-color: #38bdf8; /* sky-400 */
       }
       .audiologo-pos-btn-active {
           background-color: #0ea5e9; /* sky-500 */
           color: white;
           border-color: #0ea5e9; /* sky-500 */
       }
       .quick-pauta-btn {
           background-color: #e2e8f0; /* slate-200 */
           color: #334155; /* slate-700 */
       }
       .quick-pauta-btn:hover {
           background-color: #cbd5e1; /* slate-300 */
       }
       #edited_text_output {
           white-space: pre-wrap; /* Ensures line breaks are respected */
           word-wrap: break-word; /* Ensures long words break */
           font-family: monospace; /* Good for pre-formatted text */
           background-color: #f9fafb; /* gray-50 */
           border: 1px solid #e5e7eb; /* gray-200 */
           padding: 1rem;
           border-radius: 0.5rem;
           max-height: 400px;
           overflow-y: auto;
       }
   </style>
</head>
<body class="bg-slate-100 text-slate-800 min-h-screen flex flex-col items-center justify-center p-4 selection:bg-sky-500 selection:text-white">


   <div class="bg-white shadow-xl rounded-lg p-6 md:p-8 w-full max-w-3xl">
       <header class="mb-8 text-center">
           <h1 class="text-3xl font-bold text-sky-600">EntraEnPauta App</h1>
           <p class="text-slate-600 mt-1">Pega tus textos y estima si caben en la pauta.</p>
       </header>


       <main>
           <section class="mb-6">
               <h2 class="text-xl font-semibold mb-3 text-sky-700">Selecciona o escribe la duración de tu pauta</h2>
               <div class="p-3 bg-slate-50 rounded-lg">
                   <div class="grid grid-cols-2 gap-4 mb-4">
                       <div>
                           <label for="pauta_minutes_input" class="block text-sm font-medium text-slate-700 mb-1">Minutos:</label>
                           <input type="number" id="pauta_minutes_input" min="0" value="0" class="block w-full p-3 border border-slate-300 rounded-md shadow-sm focus:ring-sky-500 focus:border-sky-500 text-lg text-center">
                       </div>
                       <div>
                           <label for="pauta_seconds_input" class="block text-sm font-medium text-slate-700 mb-1">Segundos:</label>
                           <input type="number" id="pauta_seconds_input" min="0" max="59" value="30" class="block w-full p-3 border border-slate-300 rounded-md shadow-sm focus:ring-sky-500 focus:border-sky-500 text-lg text-center">
                       </div>
                   </div>
                   <div class="grid grid-cols-2 sm:grid-cols-4 gap-2">
                       <button type="button" id="quick_pauta_1m" class="quick-pauta-btn p-3 border border-transparent rounded-md text-sm font-medium transition-colors duration-150">1 Minuto</button>
                       <button type="button" id="quick_pauta_30s" class="quick-pauta-btn p-3 border border-transparent rounded-md text-sm font-medium transition-colors duration-150">30 Segundos</button>
                       <button type="button" id="quick_pauta_20s" class="quick-pauta-btn p-3 border border-transparent rounded-md text-sm font-medium transition-colors duration-150">20 Segundos</button>
                       <button type="button" id="quick_pauta_15s" class="quick-pauta-btn p-3 border border-transparent rounded-md text-sm font-medium transition-colors duration-150">15 Segundos</button>
                   </div>
               </div>
           </section>


           <section class="mb-8">
               <h3 class="text-lg font-medium mb-2 text-slate-700">Estructura de la Pauta:</h3>
               <div id="pauta-bar-container" class="w-full h-8 bg-slate-200 rounded-lg overflow-hidden flex shadow-inner">
                   <div id="audiologo-bar" class="pauta-bar-segment h-full bg-pink-500" style="width: 0%;" title="AudioLogo"></div>
                   <div id="creativo-bar" class="pauta-bar-segment h-full bg-teal-500" style="width: 0%;" title="Copy Creativo"></div>
                   <div id="oferta-bar" class="pauta-bar-segment h-full bg-amber-500" style="width: 0%;" title="Copy Oferta"></div>
                   <div id="legal-bar" class="pauta-bar-segment h-full bg-purple-500" style="width: 0%;" title="Copy Legal"></div>
                   <div id="excedente-bar" class="pauta-bar-segment h-full bg-red-600" style="width: 0%;" title="Tiempo Excedente"></div>
               </div>
               <div class="flex justify-between text-xs mt-1 text-slate-500">
                   <span>0s</span>
                   <span id="pauta-duration-label">30s</span>
               </div>
           </section>


           <section class="mb-6 grid md:grid-cols-2 gap-6">
               <div class="bg-slate-50 p-4 rounded-lg shadow">
                   <div class="flex items-center justify-between mb-3">
                       <h3 class="text-lg font-semibold text-pink-600">AudioLogo</h3>
                       <input type="checkbox" id="include_audiologo" class="form-checkbox h-5 w-5 text-pink-600 rounded focus:ring-pink-500">
                   </div>
                   <div id="audiologo_inputs" class="space-y-3 hidden">
                       <div>
                           <label for="audiologo_duration_seconds" class="block text-sm font-medium text-slate-700">Duración fija (s): <span id="audiologo_duration_value" class="font-bold">3s</span></label>
                           <input type="range" id="audiologo_duration_seconds" min="1" max="10" value="3" class="w-full h-2 bg-slate-200 rounded-lg appearance-none cursor-pointer accent-pink-500">
                       </div>
                      
                       <div id="audiologo_position_container" class="mt-3">
                           <p class="block text-sm font-medium text-slate-700 mb-1">¿Tu AudioLogo estará al principio o al final de tu pauta?</p>
                           <div class="flex space-x-2">
                               <button type="button" id="audiologo_pos_principio" class="audiologo-pos-btn flex-1 p-2 border-2 rounded-md text-sm">Al principio</button>
                               <button type="button" id="audiologo_pos_final" class="audiologo-pos-btn flex-1 p-2 border-2 rounded-md text-sm">Al final</button>
                           </div>
                       </div>


                       <div class="flex items-center">
                           <input type="checkbox" id="audiologo_has_vo" class="form-checkbox h-4 w-4 text-pink-600 rounded mr-2 focus:ring-pink-500">
                           <label for="audiologo_has_vo" class="text-sm font-medium text-slate-700">¿Incluye VoiceOver?</label>
                       </div>
                       <div id="audiologo_vo_words_container" class="hidden">
                           <label for="audiologo_vo_text" class="block text-sm font-medium text-slate-700">Texto del VO del AudioLogo:</label>
                           <textarea id="audiologo_vo_text" rows="2" class="mt-1 block w-full p-2 border border-slate-300 rounded-md shadow-sm focus:ring-pink-500 focus:border-pink-500 sm:text-sm" placeholder="Pega acá el VO del AudioLogo"></textarea>
                           <div class="flex justify-between items-center mt-1">
                               <span id="audiologo_vo_word_count" class="text-xs text-slate-500">0 palabras</span>
                               <span id="audiologo_vo_time_warning" class="text-xs text-red-500"></span>
                           </div>
                           <div class="mt-1">
                               <span id="audiologo_vo_numeric_warning" class="text-xs text-amber-600"></span>
                           </div>
                       </div>
                   </div>
               </div>


               <div class="bg-slate-50 p-4 rounded-lg shadow">
                    <div class="flex items-center justify-between mb-3">
                       <h3 class="text-lg font-semibold text-teal-600">Copy Creativo</h3>
                       <input type="checkbox" id="include_creativo" class="form-checkbox h-5 w-5 text-teal-600 rounded focus:ring-teal-500" checked>
                   </div>
                   <div id="creativo_inputs" class="space-y-3">
                       <div>
                           <label for="creativo_text" class="block text-sm font-medium text-slate-700">Texto del Copy Creativo:</label>
                           <textarea id="creativo_text" rows="4" class="mt-1 block w-full p-2 border border-slate-300 rounded-md shadow-sm focus:ring-teal-500 focus:border-teal-500 sm:text-sm" placeholder="Pega acá el copy creativo"></textarea>
                           <div class="flex justify-between items-center mt-1">
                               <span id="creativo_word_count" class="text-xs text-slate-500">0 palabras</span>
                               <span id="creativo_time_warning" class="text-xs text-red-500"></span>
                           </div>
                           <div class="mt-1">
                               <span id="creativo_numeric_warning" class="text-xs text-amber-600"></span>
                           </div>
                       </div>
                   </div>
               </div>


               <div class="bg-slate-50 p-4 rounded-lg shadow">
                    <div class="flex items-center justify-between mb-3">
                       <h3 class="text-lg font-semibold text-amber-600">Copy Oferta</h3>
                       <input type="checkbox" id="include_oferta" class="form-checkbox h-5 w-5 text-amber-600 rounded focus:ring-amber-500">
                   </div>
                   <div id="oferta_inputs" class="space-y-3 hidden">
                       <div>
                           <label for="oferta_text" class="block text-sm font-medium text-slate-700">Texto del Copy Oferta:</label>
                           <textarea id="oferta_text" rows="3" class="mt-1 block w-full p-2 border border-slate-300 rounded-md shadow-sm focus:ring-amber-500 focus:border-amber-500 sm:text-sm" placeholder="Pega acá el copy de oferta"></textarea>
                           <div class="flex justify-between items-center mt-1">
                               <span id="oferta_word_count" class="text-xs text-slate-500">0 palabras</span>
                               <span id="oferta_time_warning" class="text-xs text-red-500"></span>
                           </div>
                           <div class="mt-1">
                               <span id="oferta_numeric_warning" class="text-xs text-amber-600"></span>
                           </div>
                       </div>
                   </div>
               </div>


               <div class="bg-slate-50 p-4 rounded-lg shadow">
                   <div class="flex items-center justify-between mb-3">
                       <h3 class="text-lg font-semibold text-purple-600">Copy Legal</h3>
                       <input type="checkbox" id="include_legal" class="form-checkbox h-5 w-5 text-purple-600 rounded focus:ring-purple-500">
                   </div>
                   <div id="legal_inputs" class="space-y-3 hidden">
                       <div>
                           <label for="legal_text" class="block text-sm font-medium text-slate-700">Texto del Copy Legal:</label>
                           <textarea id="legal_text" rows="3" class="mt-1 block w-full p-2 border border-slate-300 rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm" placeholder="Pega acá el copy legal"></textarea>
                            <div class="flex justify-between items-center mt-1">
                               <span id="legal_word_count" class="text-xs text-slate-500">0 palabras</span>
                               <span id="legal_time_warning" class="text-xs text-red-500"></span>
                           </div>
                           <div class="mt-1">
                               <span id="legal_numeric_warning" class="text-xs text-amber-600"></span>
                           </div>
                       </div>
                       <div>
                           <label for="legal_speed" class="block text-sm font-medium text-slate-700">Velocidad del Legal:</label>
                           <select id="legal_speed" class="mt-1 block w-full p-2 border border-slate-300 bg-white rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm">
                               <option value="normal">Normal (~100 PPM)</option>
                               <option value="rapido">Rápido (~120 PPM)</option>
                               <option value="muy_rapido">Muy Rápido (~140 PPM)</option>
                           </select>
                       </div>
                   </div>
               </div>
           </section>


           <section class="mt-8 mb-4 text-center">
               <button type="button" id="generate_edited_text_btn" class="bg-sky-600 hover:bg-sky-700 text-white font-semibold py-3 px-6 rounded-lg shadow-md transition-colors duration-150 focus:outline-none focus:ring-2 focus:ring-sky-500 focus:ring-offset-2">
                   Generar Texto Editado
               </button>
           </section>


           <section id="edited_text_output_container" class="hidden mt-6">
                <h3 class="text-lg font-medium mb-2 text-slate-700">Resumen del Guion:</h3>
               <pre id="edited_text_output"></pre>
           </section>


           <section id="results_section" class="mt-8 p-6 bg-sky-50 rounded-lg shadow-md">
               <h2 class="text-2xl font-bold mb-4 text-center" id="result_message">Calculando...</h2>
               <div class="grid grid-cols-1 sm:grid-cols-3 gap-4 text-center">
                   <div>
                       <p class="text-sm text-slate-500">Tiempo Estimado Total</p>
                       <p id="total_estimated_time_display" class="text-2xl font-bold">0.0s</p>
                   </div>
                   <div>
                       <p class="text-sm text-slate-500">Tiempo de Pauta</p>
                       <p id="pauta_time_display" class="text-2xl font-bold">30.0s</p>
                   </div>
                   <div>
                       <p class="text-sm text-slate-500">Diferencia</p>
                       <p id="difference_time_display" class="text-2xl font-bold">30.0s</p>
                   </div>
               </div>
           </section>
       </main>


       <footer class="mt-10 text-center text-sm text-slate-500">
           <p>&copy; <span id="current_year"></span> EntraEnPauta App. Melillo Sound.</p>
       </footer>


       <section class="mt-10 pt-6 border-t border-slate-200 text-center">
           <p class="text-slate-600 mb-4">
               ¿Te gustó la app? En Melillo Sound creamos soluciones de audio increíbles. ¡Hablemos de tu próximo proyecto!
           </p>
           <a href="https://www.melillosound.com" target="_blank" rel="noopener noreferrer" class="inline-block bg-green-500 hover:bg-green-600 text-white font-semibold py-2 px-6 rounded-lg shadow-md transition-colors duration-150 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2">
               Contacta a Melillo Sound
           </a>
       </section>
   </div>


   <script>
       // Constantes de cálculo
       const SPP_NORMAL = 0.6;
       const LEGAL_SPEED_FACTORS = { normal: 1.0, rapido: 1.2, muy_rapido: 1.4 };
       const SUGGESTED_TIMES = { creativo: 20, oferta: 8, legal: 6 };
       const NUMERIC_REGEX = /\d|[xX]/;


       // Elementos del DOM - Pauta
       const pautaMinutesInput = document.getElementById('pauta_minutes_input');
       const pautaSecondsInput = document.getElementById('pauta_seconds_input');
       const quickPauta1mBtn = document.getElementById('quick_pauta_1m');
       const quickPauta30sBtn = document.getElementById('quick_pauta_30s');
       const quickPauta20sBtn = document.getElementById('quick_pauta_20s');
       const quickPauta15sBtn = document.getElementById('quick_pauta_15s');
       const pautaDurationLabel = document.getElementById('pauta-duration-label');
       const pautaBarContainer = document.getElementById('pauta-bar-container');


       // Elementos del DOM - AudioLogo
       const includeAudioLogo = document.getElementById('include_audiologo');
       const audioLogoInputs = document.getElementById('audiologo_inputs');
       const audioLogoDurationSlider = document.getElementById('audiologo_duration_seconds');
       const audioLogoDurationValue = document.getElementById('audiologo_duration_value');
       const audioLogoPositionContainer = document.getElementById('audiologo_position_container');
       const audiologoPosPrincipioBtn = document.getElementById('audiologo_pos_principio');
       const audiologoPosFinalBtn = document.getElementById('audiologo_pos_final');
       const audioLogoHasVO = document.getElementById('audiologo_has_vo');
       const audioLogoVOWordsContainer = document.getElementById('audiologo_vo_words_container');
       const audioLogoVOText = document.getElementById('audiologo_vo_text');
       const audioLogoVOWordCount = document.getElementById('audiologo_vo_word_count');
       const audioLogoVOTimeWarning = document.getElementById('audiologo_vo_time_warning');
       const audioLogoVONumericWarning = document.getElementById('audiologo_vo_numeric_warning');


       // Elementos del DOM - Resto de Secciones y Resultados
       const includeCreativo = document.getElementById('include_creativo');
       const creativoInputs = document.getElementById('creativo_inputs');
       const creativoText = document.getElementById('creativo_text');
       const creativoWordCount = document.getElementById('creativo_word_count');
       const creativoTimeWarning = document.getElementById('creativo_time_warning');
       const creativoNumericWarning = document.getElementById('creativo_numeric_warning');


       const includeOferta = document.getElementById('include_oferta');
       const ofertaInputs = document.getElementById('oferta_inputs');
       const ofertaText = document.getElementById('oferta_text');
       const ofertaWordCount = document.getElementById('oferta_word_count');
       const ofertaTimeWarning = document.getElementById('oferta_time_warning');
       const ofertaNumericWarning = document.getElementById('oferta_numeric_warning');


       const includeLegal = document.getElementById('include_legal');
       const legalInputs = document.getElementById('legal_inputs');
       const legalText = document.getElementById('legal_text');
       const legalWordCount = document.getElementById('legal_word_count');
       const legalTimeWarning = document.getElementById('legal_time_warning');
       const legalNumericWarning = document.getElementById('legal_numeric_warning');
       const legalSpeedSelect = document.getElementById('legal_speed');


       const resultMessage = document.getElementById('result_message');
       const totalEstimatedTimeDisplay = document.getElementById('total_estimated_time_display');
       const pautaTimeDisplay = document.getElementById('pauta_time_display');
       const differenceTimeDisplay = document.getElementById('difference_time_display');
       const audioLogoBar = document.getElementById('audiologo-bar');
       const creativoBar = document.getElementById('creativo-bar');
       const ofertaBar = document.getElementById('oferta-bar');
       const legalBar = document.getElementById('legal-bar');
       const excedenteBar = document.getElementById('excedente-bar');


       // Elementos para Texto Editado
       const generateEditedTextBtn = document.getElementById('generate_edited_text_btn');
       const editedTextOutputContainer = document.getElementById('edited_text_output_container');
       const editedTextOutput = document.getElementById('edited_text_output');
      
       document.getElementById('current_year').textContent = new Date().getFullYear();
       let audioLogoPosition = 'principio';


       // --- Funciones ---
       function formatTime(totalSecondsValue, forSummary = false) {
           if (isNaN(totalSecondsValue)) return "0s";
           const sign = totalSecondsValue < 0 && !forSummary ? "-" : "";
           const totalSeconds = Math.abs(totalSecondsValue);
           const minutes = Math.floor(totalSeconds / 60);
           const seconds = totalSeconds % 60;
           let formattedString = sign;
           if (minutes > 0) {
               formattedString += `${minutes}m ${parseFloat(seconds.toFixed(1))}s`;
           } else {
               formattedString += `${parseFloat(seconds.toFixed(1))}s`;
           }
           return formattedString;
       }


       function toggleSection(checkbox, sectionDiv, textElement = null, alsoToggle = null) {
           const isChecked = checkbox.checked;
           sectionDiv.style.display = isChecked ? 'block' : 'none';
           if (alsoToggle) { alsoToggle.style.display = isChecked ? 'block' : 'none'; }
           if (!isChecked && textElement) {
               textElement.value = "";
               textElement.dispatchEvent(new Event('input', { bubbles: true, cancelable: true }));
           }
       }
      
       function countWords(str) {
           if (!str || str.trim() === "") return 0;
           return str.trim().split(/\s+/).filter(Boolean).length;
       }


       function updateWordCountAndSectionWarning(textareaElem, countElem, timeWarningElem, numericWarningElem, sectionType, spp) {
           const text = textareaElem.value;
           const words = countWords(text);
           countElem.textContent = `${words} palabra${words !== 1 ? 's' : ''}`;
          
           const estimatedTime = words * spp;
           let suggestedTimeForSection = 0;
           let timeWarningMessage = "";
           if (sectionType === 'audiologo_vo') {
               const audioLogoFixedDuration = parseFloat(audioLogoDurationSlider.value);
               if (estimatedTime > audioLogoFixedDuration && words > 0) {
                   timeWarningMessage = `VO (${formatTime(estimatedTime)}) excede duración fija (${formatTime(audioLogoFixedDuration)}).`;
               }
           } else if (SUGGESTED_TIMES[sectionType]) {
               suggestedTimeForSection = SUGGESTED_TIMES[sectionType];
                if (estimatedTime > suggestedTimeForSection && words > 0) {
                   timeWarningMessage = `Extenso (${formatTime(estimatedTime)} > ${formatTime(suggestedTimeForSection)} sug.)`;
               }
           }
           timeWarningElem.textContent = timeWarningMessage;
           textareaElem.classList.toggle('textarea-error', !!timeWarningMessage);
           countElem.classList.toggle('counter-error', !!timeWarningMessage);


           if (NUMERIC_REGEX.test(text)) {
               numericWarningElem.textContent = "Advertencia: Se detectaron números o 'x'. Verifica si afectan la lectura.";
           } else {
               numericWarningElem.textContent = "";
           }
       }
      
       function setAudioLogoPositionUI(newPosition) {
           audioLogoPosition = newPosition;
           audiologoPosPrincipioBtn.classList.toggle('audiologo-pos-btn-active', newPosition === 'principio');
           audiologoPosFinalBtn.classList.toggle('audiologo-pos-btn-active', newPosition === 'final');
           audiologoPosPrincipioBtn.classList.toggle('border-slate-300', newPosition !== 'principio');
           audiologoPosPrincipioBtn.classList.toggle('hover:border-sky-400', newPosition !== 'principio');
           audiologoPosFinalBtn.classList.toggle('border-slate-300', newPosition !== 'final');
           audiologoPosFinalBtn.classList.toggle('hover:border-sky-400', newPosition !== 'final');
           calculateAndDisplay();
       }


       function setPautaTime(minutes, seconds) {
           pautaMinutesInput.value = minutes;
           pautaSecondsInput.value = seconds;
           calculateAndDisplay();
       }


       // --- Event Listeners ---
       [pautaMinutesInput, pautaSecondsInput].forEach(input => input.addEventListener('input', calculateAndDisplay));
       quickPauta1mBtn.addEventListener('click', () => setPautaTime(1, 0));
       quickPauta30sBtn.addEventListener('click', () => setPautaTime(0, 30));
       quickPauta20sBtn.addEventListener('click', () => setPautaTime(0, 20));
       quickPauta15sBtn.addEventListener('click', () => setPautaTime(0, 15));


       includeAudioLogo.addEventListener('change', () => {
           toggleSection(includeAudioLogo, audioLogoInputs, audioLogoVOText, audioLogoPositionContainer);
           if (!includeAudioLogo.checked) {
               audioLogoHasVO.checked = false;
               toggleSection(audioLogoHasVO, audioLogoVOWordsContainer, audioLogoVOText);
           }
           calculateAndDisplay();
       });
       audiologoPosPrincipioBtn.addEventListener('click', () => setAudioLogoPositionUI('principio'));
       audiologoPosFinalBtn.addEventListener('click', () => setAudioLogoPositionUI('final'));
      
       audioLogoHasVO.addEventListener('change', () => {
           toggleSection(audioLogoHasVO, audioLogoVOWordsContainer, audioLogoVOText);
           calculateAndDisplay();
       });
       includeCreativo.addEventListener('change', () => {
           toggleSection(includeCreativo, creativoInputs, creativoText);
           calculateAndDisplay();
       });
       includeOferta.addEventListener('change', () => {
           toggleSection(includeOferta, ofertaInputs, ofertaText);
           calculateAndDisplay();
       });
       includeLegal.addEventListener('change', () => {
           toggleSection(includeLegal, legalInputs, legalText);
           calculateAndDisplay();
       });


       audioLogoVOText.addEventListener('input', () => {
           updateWordCountAndSectionWarning(audioLogoVOText, audioLogoVOWordCount, audioLogoVOTimeWarning, audioLogoVONumericWarning, 'audiologo_vo', SPP_NORMAL);
           calculateAndDisplay();
       });
       creativoText.addEventListener('input', () => {
           updateWordCountAndSectionWarning(creativoText, creativoWordCount, creativoTimeWarning, creativoNumericWarning, 'creativo', SPP_NORMAL);
           calculateAndDisplay();
       });
       ofertaText.addEventListener('input', () => {
           updateWordCountAndSectionWarning(ofertaText, ofertaWordCount, ofertaTimeWarning, ofertaNumericWarning, 'oferta', SPP_NORMAL);
           calculateAndDisplay();
       });
       legalText.addEventListener('input', () => {
           const spp = SPP_NORMAL / LEGAL_SPEED_FACTORS[legalSpeedSelect.value];
           updateWordCountAndSectionWarning(legalText, legalWordCount, legalTimeWarning, legalNumericWarning, 'legal', spp);
           calculateAndDisplay();
       });


       legalSpeedSelect.addEventListener('change', () => {
           const spp = SPP_NORMAL / LEGAL_SPEED_FACTORS[legalSpeedSelect.value];
           updateWordCountAndSectionWarning(legalText, legalWordCount, legalTimeWarning, legalNumericWarning, 'legal', spp);
           calculateAndDisplay();
       });
       audioLogoDurationSlider.addEventListener('input', () => {
           audioLogoDurationValue.textContent = audioLogoDurationSlider.value + 's';
           updateWordCountAndSectionWarning(audioLogoVOText, audioLogoVOWordCount, audioLogoVOTimeWarning, audioLogoVONumericWarning, 'audiologo_vo', SPP_NORMAL);
           calculateAndDisplay();
       });
      
       let currentComponentTimes = {};
       let currentSelectedPautaTime = 0;


       // --- Función principal de cálculo y visualización ---
       function calculateAndDisplay() {
           const minutes = parseInt(pautaMinutesInput.value) || 0;
           const seconds = parseInt(pautaSecondsInput.value) || 0;
           currentSelectedPautaTime = (minutes * 60) + seconds;


           pautaDurationLabel.textContent = formatTime(currentSelectedPautaTime);
           pautaTimeDisplay.textContent = formatTime(currentSelectedPautaTime);


           let totalTime = 0;
           currentComponentTimes = { audiologo: 0, creativo: 0, oferta: 0, legal: 0 };


           if (includeAudioLogo.checked) {
               currentComponentTimes.audiologo = parseFloat(audioLogoDurationSlider.value);
               totalTime += currentComponentTimes.audiologo;
           }
           if (includeCreativo.checked) {
               currentComponentTimes.creativo = countWords(creativoText.value) * SPP_NORMAL;
               totalTime += currentComponentTimes.creativo;
           }
           if (includeOferta.checked) {
               currentComponentTimes.oferta = countWords(ofertaText.value) * SPP_NORMAL;
               totalTime += currentComponentTimes.oferta;
           }
           if (includeLegal.checked) {
               currentComponentTimes.legal = countWords(legalText.value) * (SPP_NORMAL / LEGAL_SPEED_FACTORS[legalSpeedSelect.value]);
               totalTime += currentComponentTimes.legal;
           }


           totalEstimatedTimeDisplay.textContent = formatTime(totalTime);
           const difference = currentSelectedPautaTime - totalTime;
           differenceTimeDisplay.textContent = formatTime(difference);


           if (currentSelectedPautaTime > 0) {
               const percentageOfPautaUsed = (totalTime / currentSelectedPautaTime) * 100;
               if (totalTime > currentSelectedPautaTime) {
                   resultMessage.textContent = "TU TEXTO EXCEDE LA PAUTA";
                   resultMessage.className = "text-2xl font-bold mb-4 text-center text-red-600";
                   differenceTimeDisplay.className = "text-2xl font-bold text-red-600";
               } else if (percentageOfPautaUsed > 80) {
                   resultMessage.textContent = "TU TEXTO PODRÍA ESTAR APRETADO DENTRO DE LA PAUTA";
                   resultMessage.className = "text-2xl font-bold mb-4 text-center text-yellow-500";
                   differenceTimeDisplay.className = "text-2xl font-bold text-yellow-500";
               } else if (percentageOfPautaUsed >= 50) {
                   resultMessage.textContent = "TU TEXTO FUNCIONA DENTRO DE LA PAUTA";
                   resultMessage.className = "text-2xl font-bold mb-4 text-center text-green-600";
                   differenceTimeDisplay.className = "text-2xl font-bold text-green-600";
               } else {
                   resultMessage.textContent = "PODRÍA SOBRAR ESPACIO DENTRO DE ESTA PAUTA";
                   resultMessage.className = "text-2xl font-bold mb-4 text-center text-yellow-500";
                   differenceTimeDisplay.className = "text-2xl font-bold text-yellow-500";
               }
           } else if (totalTime > 0 && currentSelectedPautaTime <= 0) {
               resultMessage.textContent = "SELECCIONA UNA DURACIÓN DE PAUTA VÁLIDA";
               resultMessage.className = "text-2xl font-bold mb-4 text-center text-orange-500";
               differenceTimeDisplay.className = "text-2xl font-bold text-orange-500";
               differenceTimeDisplay.textContent = formatTime(0 - totalTime);
           } else {
               resultMessage.textContent = "Ingresa datos para calcular";
               resultMessage.className = "text-2xl font-bold mb-4 text-center text-slate-500";
               differenceTimeDisplay.className = "text-2xl font-bold text-slate-500";
               differenceTimeDisplay.textContent = formatTime(0);
           }
          
           [audioLogoBar, creativoBar, ofertaBar, legalBar, excedenteBar].forEach(bar => bar.style.width = '0%');
           const allSegments = [audioLogoBar, creativoBar, ofertaBar, legalBar, excedenteBar];
           allSegments.forEach(seg => seg.remove());


           if (currentSelectedPautaTime > 0) {
               let filledPercentage = 0;
               const componentOrder = [];


               if (includeAudioLogo.checked && audioLogoPosition === 'principio') {
                   componentOrder.push({ bar: audioLogoBar, time: currentComponentTimes.audiologo });
               }
               if (includeCreativo.checked) {
                   componentOrder.push({ bar: creativoBar, time: currentComponentTimes.creativo });
               }
               if (includeOferta.checked) {
                   componentOrder.push({ bar: ofertaBar, time: currentComponentTimes.oferta });
               }
               if (includeLegal.checked) {
                   componentOrder.push({ bar: legalBar, time: currentComponentTimes.legal });
               }
               if (includeAudioLogo.checked && audioLogoPosition === 'final') {
                   componentOrder.push({ bar: audioLogoBar, time: currentComponentTimes.audiologo });
               }


               componentOrder.forEach(item => {
                   pautaBarContainer.appendChild(item.bar);
                   if (item.time > 0 && filledPercentage < 100) {
                       const percentageOfPauta = (item.time / currentSelectedPautaTime) * 100;
                       const widthToSet = Math.min(percentageOfPauta, 100 - filledPercentage);
                       item.bar.style.width = widthToSet + '%';
                       filledPercentage += widthToSet;
                   } else {
                       item.bar.style.width = '0%';
                   }
               });
              
               pautaBarContainer.appendChild(excedenteBar);
               if (totalTime > currentSelectedPautaTime) {
                   excedenteBar.style.width = ((totalTime - currentSelectedPautaTime) / currentSelectedPautaTime) * 100 + '%';
               } else {
                   excedenteBar.style.width = '0%';
               }
           } else {
               pautaBarContainer.appendChild(audioLogoBar);
               pautaBarContainer.appendChild(creativoBar);
               pautaBarContainer.appendChild(ofertaBar);
               pautaBarContainer.appendChild(legalBar);
               pautaBarContainer.appendChild(excedenteBar);
           }
       }


       // --- Función para Generar Texto Editado ---
       function generateAndDisplayEditedText() {
           let fullScriptText = "";
           const summaryDetails = [];


           // Build the full script text in order
           if (includeAudioLogo.checked && audioLogoPosition === 'principio' && audioLogoHasVO.checked && audioLogoVOText.value.trim() !== "") {
               fullScriptText += audioLogoVOText.value.trim() + "\n\n";
           }
           if (includeCreativo.checked && creativoText.value.trim() !== "") {
               fullScriptText += creativoText.value.trim() + "\n\n";
           }
           if (includeOferta.checked && ofertaText.value.trim() !== "") {
               fullScriptText += ofertaText.value.trim() + "\n\n";
           }
           if (includeLegal.checked && legalText.value.trim() !== "") {
               fullScriptText += legalText.value.trim() + "\n\n";
           }
           if (includeAudioLogo.checked && audioLogoPosition === 'final' && audioLogoHasVO.checked && audioLogoVOText.value.trim() !== "") {
               fullScriptText += audioLogoVOText.value.trim() + "\n\n";
           }
          
           if (fullScriptText.endsWith("\n\n")) {
               fullScriptText = fullScriptText.slice(0, -2);
           }




           let output = `GUION EDITADO:\n\n`;
           output += fullScriptText.trim() === "" ? "(No hay texto en las secciones seleccionadas para el guion)\n" : fullScriptText.trim();
           output += "\n\n*******************************************\n";
           output += `DURACIÓN DE LA PAUTA: ${formatTime(currentSelectedPautaTime, true)}\n`;


           // Build summary details in order
           if (includeAudioLogo.checked && audioLogoPosition === 'principio') {
               summaryDetails.push(`AudioLogo: ${formatTime(currentComponentTimes.audiologo, true)}`);
           }
           if (includeCreativo.checked) {
               summaryDetails.push(`Copy Creativo: ${formatTime(currentComponentTimes.creativo, true)}`);
           }
           if (includeOferta.checked) {
               summaryDetails.push(`Copy Oferta: ${formatTime(currentComponentTimes.oferta, true)}`);
           }
           if (includeLegal.checked) {
               summaryDetails.push(`Copy Legal: ${formatTime(currentComponentTimes.legal, true)}`);
           }
           if (includeAudioLogo.checked && audioLogoPosition === 'final') {
               summaryDetails.push(`AudioLogo: ${formatTime(currentComponentTimes.audiologo, true)}`);
           }
          
           if (summaryDetails.length > 0) {
               summaryDetails.forEach(detail => {
                   output += `${detail}\n`;
               });
           }


           editedTextOutput.textContent = output.trim();
           editedTextOutputContainer.style.display = 'block';
       }


       generateEditedTextBtn.addEventListener('click', generateAndDisplayEditedText);
      
       function initializeApp() {
           toggleSection(includeAudioLogo, audioLogoInputs, audioLogoVOText, audioLogoPositionContainer);
           if (includeAudioLogo.checked) {
                setAudioLogoPositionUI(audioLogoPosition);
           } else {
               audioLogoPositionContainer.style.display = 'none';
           }
           toggleSection(audioLogoHasVO, audioLogoVOWordsContainer, audioLogoVOText);
           updateWordCountAndSectionWarning(audioLogoVOText, audioLogoVOWordCount, audioLogoVOTimeWarning, audioLogoVONumericWarning, 'audiologo_vo', SPP_NORMAL);
          
           toggleSection(includeCreativo, creativoInputs, creativoText);
           updateWordCountAndSectionWarning(creativoText, creativoWordCount, creativoTimeWarning, creativoNumericWarning, 'creativo', SPP_NORMAL);
          
           toggleSection(includeOferta, ofertaInputs, ofertaText);
           updateWordCountAndSectionWarning(ofertaText, ofertaWordCount, ofertaTimeWarning, ofertaNumericWarning, 'oferta', SPP_NORMAL);


           toggleSection(includeLegal, legalInputs, legalText);
           updateWordCountAndSectionWarning(legalText, legalWordCount, legalTimeWarning, legalNumericWarning, 'legal', SPP_NORMAL / LEGAL_SPEED_FACTORS[legalSpeedSelect.value]);
          
           setAudioLogoPositionUI('principio');
           calculateAndDisplay();
       }
      
       initializeApp();
   </script>
</body>
</html>